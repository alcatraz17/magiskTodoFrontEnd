{"version":3,"sources":["ToDoList.jsx","App.jsx","index.js"],"names":["ToDoList","props","className","aria-hidden","onClick","onSelect","id","editTask","text","App","useEffect","getItems","useState","inputList","setInputList","items","setItems","edit","setEdit","editableId","setEditableId","itemEvent","event","target","value","a","axios","get","data","tasks","map","ele","console","error","postItem","body","task","post","deleteItem","_id","delete","updateTodo","patch","log","type","placeholder","onChange","itemValue","index","ReactDOM","render","document","getElementById"],"mappings":"sNA0BeA,EAxBE,SAACC,GAChB,OACE,mCACE,sBAAKC,UAAU,aAAf,UACE,mBACEA,UAAU,cACVC,cAAY,OACZC,QAAS,WACPH,EAAMI,SAASJ,EAAMK,OAGzB,mBACEJ,UAAU,cACVC,cAAY,OACZC,QAAY,WACVH,EAAMM,SAASN,EAAMK,GAAIL,EAAMO,SAGnC,6BAAKP,EAAMO,aCuHJC,EAvIH,WAEVC,qBAAU,WACRC,MACC,IAJa,MAMkBC,mBAAS,IAN3B,mBAMTC,EANS,KAMEC,EANF,OAOUF,mBAAS,IAPnB,mBAOTG,EAPS,KAOFC,EAPE,OAQQJ,oBAAS,GARjB,mBAQTK,EARS,KAQHC,EARG,OASoBN,mBAAS,MAT7B,mBASTO,EATS,KASGC,EATH,KAWVC,EAAY,SAACC,GAEjB,OADAR,EAAaQ,EAAMC,OAAOC,OACnBF,EAAMC,OAAOC,OAGhBb,EAAQ,uCAAG,gCAAAc,EAAA,+EAEUC,IAAMC,IAAI,qDAFpB,gBAELC,EAFK,EAELA,KACFC,EAAQD,EAAKE,KAAI,SAACC,GAEtB,OADaA,KAIff,EAAS,YAAIa,IARA,gDAUbG,QAAQC,MAAR,MAVa,yDAAH,qDAcRC,EAAQ,uCAAG,4BAAAT,EAAA,sEAELU,EAAO,CAEXC,KAAMvB,GAJG,SAMWa,IAAMW,KAAK,gDAAiDF,GANvE,cAOXrB,EAAa,IAPF,gDASXkB,QAAQC,MAAR,MATW,QAWftB,IAXe,yDAAH,qDAeR2B,EAAU,uCAAG,WAAOC,GAAP,SAAAd,EAAA,+EAMOC,IAAMc,OAAO,gDAAiD,CAAEZ,KAAM,CAAEW,SAN/E,6DAQfP,QAAQC,MAAR,MARe,OAUjBtB,IAViB,yDAAH,sDAoBV8B,EAAU,uCAAG,4BAAAhB,EAAA,6DACXU,EAAO,CACXI,IAAKpB,EACLiB,KAAMvB,GAHS,kBAMQa,IAAMgB,MAAM,iDAAkDP,GANtE,8DAQfH,QAAQC,MAAR,MARe,QAUjBD,QAAQW,IAAIR,GACZjB,GAAQ,GACRJ,EAAa,IACbH,IAbiB,yDAAH,qDAgBhB,OACE,mCACE,qBAAKT,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,6CACA,wBACEe,GAAS,gCAAK,uBACd2B,KAAK,OACLpB,MAAOX,EACPgC,YAAY,qBACZC,SAAUzB,IAEV,wBAAQjB,QAAS8B,EAAjB,iBAEA,6BACGnB,EAAMe,KAAI,SAACiB,EAAWC,GACrB,OACE,cAAC,EAAD,CAEE1C,GAAIyC,EAAUR,IACdlC,SAAUiC,EACV/B,SAAU,SAACD,EAAI8B,IA7ChB,SAAC9B,EAAIE,GACpBU,GAAQ,GACRJ,EAAaN,GACbY,EAAcd,GA2CIC,CAASD,EAAI8B,IAEf5B,KAAMuC,EAAUX,MANXY,WAWd/B,GACC,sBAAKf,UAAU,aAAf,UAA4B,uBAC1B0C,KAAK,OACLpB,MAAOX,EACPgC,YAAY,qBACZC,SAAUzB,IAEV,wBAAQjB,QAASqC,EAAjB,iBACA,mBACEvC,UAAU,cACVC,cAAY,OACZC,QAAS,WACPc,GAAQ,GACRE,EAAc,MACdN,EAAa,kB,MC5H/BmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6daee17c.chunk.js","sourcesContent":["import React from 'react';\n\nconst ToDoList = (props) => {\n  return (\n    <>\n      <div className=\"todo_style\">\n        <i\n          className=\"fa fa-times\"\n          aria-hidden=\"true\"\n          onClick={() => {\n            props.onSelect(props.id);\n          }}\n        />\n        <i\n          className=\"fas fa-edit\"\n          aria-hidden=\"true\" \n          onClick = { () => {\n            props.editTask(props.id, props.text)\n          }}\n          />\n        <li>{props.text}</li>\n      </div>\n    </>\n  );\n};\n\nexport default ToDoList;\n","import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport ToDoList from \"./ToDoList\"\r\n\r\nconst App = () => {\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, []);\r\n\r\n  const [inputList, setInputList] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n  const [edit, setEdit] = useState(false);\r\n  const [editableId, setEditableId] = useState(null);\r\n\r\n  const itemEvent = (event) => {\r\n    setInputList(event.target.value);\r\n    return event.target.value\r\n  };\r\n\r\n  const getItems = async () => {\r\n    try {\r\n      const { data } = await axios.get('https://magisk-todo-backend.herokuapp.com/details');\r\n      const tasks = data.map((ele) => {\r\n        const task = ele;\r\n        return task;\r\n      })\r\n      // console.log(tasks);\r\n      setItems([...tasks]);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  const postItem = async () => {\r\n    try {\r\n        const body = {\r\n          // id: Math.floor(Math.random() * 1000000000000),\r\n          task: inputList\r\n        }\r\n        const addTask = await axios.post('https://magisk-todo-backend.herokuapp.com/add', body);\r\n        setInputList(\"\");\r\n      } catch (e) {\r\n        console.error(e)\r\n      };\r\n    getItems();\r\n    }\r\n\r\n\r\n  const deleteItem = async (_id) => {\r\n    // const body = {\r\n    //   \"_id\": _id\r\n    // }\r\n    // console.log(_id);\r\n    try {\r\n      const delTask = await axios.delete('https://magisk-todo-backend.herokuapp.com/del', { data: { _id } });\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n    getItems();\r\n  };\r\n\r\n  const editTask = (id, text) => {\r\n    setEdit(true);\r\n    setInputList(text);\r\n    setEditableId(id);\r\n  };\r\n\r\n\r\n  const updateTodo = async () => {\r\n    const body = {\r\n      _id: editableId,\r\n      task: inputList\r\n    }\r\n    try {\r\n      const editTask = await axios.patch('https://magisk-todo-backend.herokuapp.com/edit', body);\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n    console.log(body);\r\n    setEdit(false);\r\n    setInputList(\"\");\r\n    getItems();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main_div\">\r\n        <div className=\"center_div\">\r\n          <br />\r\n          <h1>Magisk ToDo</h1>\r\n          <br />\r\n          {!edit && (<div><input\r\n            type=\"text\"\r\n            value={inputList}\r\n            placeholder=\"Enter your task...\"\r\n            onChange={itemEvent}\r\n          />\r\n            <button onClick={postItem}> + </button>\r\n\r\n            <ol>\r\n              {items.map((itemValue, index) => {\r\n                return (\r\n                  <ToDoList\r\n                    key={index}\r\n                    id={itemValue._id}\r\n                    onSelect={deleteItem}\r\n                    editTask={(id, task) => {\r\n                      editTask(id, task)\r\n                    }}\r\n                    text={itemValue.task}\r\n                  />\r\n                );\r\n              })}\r\n            </ol></div>)}\r\n          {edit && (\r\n            <div className=\"todo_style\"><input\r\n              type=\"text\"\r\n              value={inputList}\r\n              placeholder=\"Enter your task...\"\r\n              onChange={itemEvent}\r\n            />\r\n              <button onClick={updateTodo}> + </button>\r\n              <i\r\n                className=\"fas fa-undo\"\r\n                aria-hidden=\"true\"\r\n                onClick={() => {\r\n                  setEdit(false);\r\n                  setEditableId(null);\r\n                  setInputList(\"\")\r\n                }}\r\n              />\r\n            </div>)}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}